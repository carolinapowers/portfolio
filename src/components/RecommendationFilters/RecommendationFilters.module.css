/* Recommendation Filters Component Styles */

.filtersContainer {
  background: var(--surface);
  border: 1px solid var(--border);
  border-radius: 12px;
  padding: 1rem;
  margin-bottom: 1.5rem;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  transition: all 0.2s ease;
}

.filtersContainer:hover {
  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
}

/* Filter Header */
.filtersHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 0.75rem;
}

.filtersTitle {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-weight: 600;
  color: var(--text-primary);
  font-size: 1rem;
}

.filterCount {
  background: var(--primary);
  color: white;
  font-size: 0.75rem;
  padding: 0.25rem 0.5rem;
  border-radius: 12px;
  font-weight: 500;
  min-width: 20px;
  text-align: center;
}

.filtersActions {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.metricsButton,
.expandButton {
  background: none;
  border: 1px solid var(--border);
  padding: 0.5rem;
  border-radius: 6px;
  cursor: pointer;
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--text-secondary);
}

.metricsButton:hover,
.expandButton:hover {
  background: var(--surface-hover);
  border-color: var(--border-hover);
  color: var(--text-primary);
}

/* Results Summary */
.resultsSummary {
  display: flex;
  align-items: center;
  gap: 1rem;
  font-size: 0.875rem;
  color: var(--text-secondary);
  margin-bottom: 1rem;
  padding: 0.75rem;
  background: var(--background-subtle);
  border-radius: 6px;
}

.filteredCount {
  color: var(--accent);
  font-weight: 500;
}

.executionTime {
  display: flex;
  align-items: center;
  gap: 0.25rem;
  color: var(--text-tertiary);
  margin-left: auto;
  font-family: 'SF Mono', Monaco, monospace;
}

/* Performance Metrics */
.performanceMetrics {
  margin-bottom: 1rem;
  padding: 1rem;
  background: var(--background-code);
  border-radius: 8px;
  border: 1px solid var(--border);
}

.performanceMetrics h4 {
  margin: 0 0 0.75rem 0;
  color: var(--text-primary);
  font-size: 0.875rem;
  font-weight: 600;
}

.metricsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
  gap: 0.75rem;
}

.metric {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
  padding: 0.5rem;
  background: var(--surface);
  border-radius: 6px;
  border: 1px solid var(--border);
}

.metricLabel {
  font-size: 0.75rem;
  color: var(--text-secondary);
  font-weight: 500;
  text-transform: capitalize;
}

.metricValue {
  font-family: 'SF Mono', Monaco, monospace;
  font-size: 0.875rem;
  color: var(--primary);
  font-weight: 600;
}

.metricMatch {
  font-size: 0.75rem;
  color: var(--text-tertiary);
}

/* Filters Content */
.filtersContent {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  margin-top: 1rem;
  padding-top: 1rem;
  border-top: 1px solid var(--border);
}

/* Search Section */
.searchSection {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

.searchInput {
  position: relative;
  display: flex;
  align-items: center;
}

.searchIcon {
  position: absolute;
  left: 0.75rem;
  color: var(--text-secondary);
  pointer-events: none;
  z-index: 1;
}

.searchField {
  width: 100%;
  padding: 0.75rem 0.75rem 0.75rem 2.5rem;
  border: 1px solid var(--border);
  border-radius: 8px;
  background: var(--surface);
  color: var(--text-primary);
  font-size: 0.875rem;
  transition: all 0.2s ease;
}

.searchField:focus {
  outline: none;
  border-color: var(--primary);
  box-shadow: 0 0 0 3px rgba(var(--primary-rgb), 0.1);
}

.clearSearch {
  position: absolute;
  right: 0.5rem;
  background: none;
  border: none;
  padding: 0.5rem;
  cursor: pointer;
  color: var(--text-secondary);
  border-radius: 4px;
  transition: all 0.2s ease;
}

.clearSearch:hover {
  background: var(--surface-hover);
  color: var(--text-primary);
}

/* Search Fields */
.searchFields {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  gap: 0.75rem;
}

.searchFieldsLabel {
  font-size: 0.75rem;
  color: var(--text-secondary);
  font-weight: 500;
}

.searchFieldOption {
  display: flex;
  align-items: center;
  gap: 0.375rem;
  font-size: 0.75rem;
  color: var(--text-secondary);
  cursor: pointer;
  padding: 0.25rem 0.5rem;
  border-radius: 4px;
  transition: all 0.2s ease;
}

.searchFieldOption:hover {
  background: var(--surface-hover);
  color: var(--text-primary);
}

.searchFieldOption input[type="checkbox"] {
  margin: 0;
  cursor: pointer;
}

/* Section Titles */
.sectionTitle {
  margin: 0 0 0.75rem 0;
  font-size: 0.875rem;
  font-weight: 600;
  color: var(--text-primary);
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

/* Skill Filters */
.skillFiltersSection {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

.skillCategories {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 0.5rem;
}

.skillCategory {
  display: flex;
}

.skillCategoryButton {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: 0.25rem;
  padding: 0.75rem;
  background: var(--surface);
  border: 1px solid var(--border);
  border-radius: 8px;
  cursor: pointer;
  transition: all 0.2s ease;
  text-align: left;
}

.skillCategoryButton:hover {
  background: var(--surface-hover);
  border-color: var(--border-hover);
  transform: translateY(-1px);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.skillCategoryButton.active {
  background: var(--primary-light);
  border-color: var(--primary);
  color: var(--primary);
}

.skillCategoryName {
  font-weight: 500;
  font-size: 0.875rem;
  color: var(--text-primary);
}

.skillCategoryButton.active .skillCategoryName {
  color: var(--primary);
}

.skillCategoryCount {
  font-size: 0.75rem;
  color: var(--text-secondary);
}

.skillCategoryButton.active .skillCategoryCount {
  color: var(--primary);
  opacity: 0.8;
}

/* Sort Section */
.sortSection {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

.sortOptions {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
}

.sortOption {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 0.75rem;
  background: var(--surface);
  border: 1px solid var(--border);
  border-radius: 6px;
  cursor: pointer;
  transition: all 0.2s ease;
  font-size: 0.875rem;
  color: var(--text-secondary);
}

.sortOption:hover {
  background: var(--surface-hover);
  border-color: var(--border-hover);
  color: var(--text-primary);
}

.sortOption.active {
  background: var(--primary);
  border-color: var(--primary);
  color: white;
}

.sortIcon {
  font-size: 0.875rem;
}

.sortOrder {
  font-weight: 600;
  margin-left: 0.25rem;
}

/* Active Filters Section */
.activeFiltersSection {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

.activeFiltersHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.clearAllButton {
  background: none;
  border: 1px solid var(--error-border);
  color: var(--error);
  padding: 0.375rem 0.75rem;
  border-radius: 6px;
  cursor: pointer;
  transition: all 0.2s ease;
  font-size: 0.75rem;
  font-weight: 500;
}

.clearAllButton:hover {
  background: var(--error);
  color: white;
}

.activeFilters {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
}

.activeFilter {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.375rem 0.75rem;
  background: var(--primary-light);
  border: 1px solid var(--primary);
  border-radius: 16px;
  color: var(--primary);
  font-size: 0.75rem;
  font-weight: 500;
}

.activeFilterLabel {
  white-space: nowrap;
}

.removeFilterButton {
  background: none;
  border: none;
  color: var(--primary);
  cursor: pointer;
  padding: 0.125rem;
  border-radius: 2px;
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  justify-content: center;
}

.removeFilterButton:hover {
  background: var(--primary);
  color: white;
}

/* Responsive Design */
@media (max-width: 768px) {
  .filtersContainer {
    padding: 0.75rem;
  }
  
  .skillCategories {
    grid-template-columns: 1fr;
  }
  
  .sortOptions {
    flex-direction: column;
  }
  
  .sortOption {
    justify-content: center;
  }
  
  .searchFields {
    flex-direction: column;
    align-items: flex-start;
  }
  
  .metricsGrid {
    grid-template-columns: 1fr;
  }
  
  .resultsSummary {
    flex-direction: column;
    align-items: flex-start;
    gap: 0.5rem;
  }
  
  .executionTime {
    margin-left: 0;
  }
}

@media (max-width: 480px) {
  .filtersHeader {
    flex-direction: column;
    align-items: flex-start;
    gap: 0.5rem;
  }
  
  .filtersActions {
    align-self: flex-end;
  }
  
  .activeFiltersHeader {
    flex-direction: column;
    align-items: flex-start;
    gap: 0.5rem;
  }
  
  .clearAllButton {
    align-self: flex-start;
  }
}